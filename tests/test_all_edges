import sys 
sys.path.append("swap_puzzle/")

import unittest 
from grid import Grid
from graph import Graph

class TestAllEdges(unittest.TestCase):
     def test_all_edges(self):
        # Initialize your grid
        grid = Grid(2,2,[[1, 3], [4, 2]]) 

        # Define expected edges as a list or set of tuples
        expected_edges = [
            # Swap 1 with 2
            (((1, 2), (3, 4)), ((2, 1), (3, 4))),
            (((2, 1), (3, 4)), ((1, 2), (3, 4))),
            
            # Swap 1 with 3
            (((1, 2), (3, 4)), ((3, 2), (1, 4))),
            (((3, 2), (1, 4)), ((1, 2), (3, 4))),
            
            # Swap 2 with 4
            (((1, 2), (3, 4)), ((1, 4), (3, 2))),
            (((1, 4), (3, 2)), ((1, 2), (3, 4))),
            
            # Swap 3 with 4
            (((1, 2), (3, 4)), ((1, 2), (4, 3))),
            (((1, 2), (4, 3)), ((1, 2), (3, 4))),
        ]

       
        generated_edges = set(grid.all_edges())

    
        for expected_edge in expected_edges:
            self.assertIn(expected_edge, generated_edges)

if __name__ == '__main__':
    unittest.main()

if __name__ == '__main__':
    unittest.main()